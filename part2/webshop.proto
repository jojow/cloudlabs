syntax = "proto3";



message Product {
  string id = 1; // should be a valid UUID
  string name = 2;
  string category = 3; // for example: USB thumb drives, flashlights, ...
  string producer = 4;
  float weight = 5; // in kilogram
  float price = 6; // in EUR
}

message ProductId {
  string id = 1; // should be a valid UUID
}

message ListProductsParams {
  int32 limit = 1; // limit the number of returned products
}

message Availability {
  bool available = 1; // true if product is available
}

message Customer {
  string id = 1;
  string firstname = 2;
  string lastname = 3;
  string shippingAddress = 4;
  string paymentDetails = 5;
}

message Order {
  string id = 1;
  Customer customer = 2;
  enum Status {
    NEW = 0;
    PAYED = 1;
    SHIPPED = 2;
    CANCELED = 3;
  }
  Status status = 3;
}

message OrderId {
  string id = 1;
}

message Costs {
  float costs = 1; // costs in EUR
}

message Payment {
  OrderId id = 1;
  float amount = 2; // amount to pay in EUR
}



service WebShop {
  rpc listProducts(ListProductsParams) returns (stream Product);

  rpc checkAvailability(ProductId) returns (Availability);

  rpc storeOrderDetails(Order) returns (OrderId);

  rpc getOrderDetails(OrderId) returns (Order);

  rpc cancelOrder(OrderId) returns (Order);

  rpc calcTransactionCosts(OrderId) returns (Costs);

  rpc conductPayment(Payment) returns (Order);

  rpc calcShipmentCosts(OrderId) returns (Costs);

  rpc shipProducts(OrderId) returns (Order);
}
